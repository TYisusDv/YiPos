@import url('https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap');

@font-face {
    font-family: 'SFProDisplay';
    src: url('../fonts/SF-Pro-Display-Regular.otf') format('opentype');
}

@font-face {
    font-family: 'SFProDisplay';
    src: url('../fonts/SF-Pro-Display-Bold.otf') format('opentype');
    font-weight: bold;
}

@font-face {
    font-family: 'SFProDisplay';
    src: url('../fonts/SF-Pro-Display-Semibold.otf') format('opentype');
    font-weight: 600;
}

@font-face {
    font-family: 'SFProDisplay';
    src: url('../fonts/SF-Pro-Display-Light.otf') format('opentype');
    font-weight: 300;
}

$bg: #eef4f3;
$primary: #4ec0b3;
$primary-hover: #3dad9f;
$primary-disabled: #6dafa7;
$danger: #ff6961;
$dark: #2d2d30;
$dark-1: #1e1e1e;
$input: #f5f8f6;  
$grey: #9d9e9f;
$header-height: 4em;
$navbar-width: 17em;

* {
    font-family: 'SFProDisplay', 'Roboto', 'Arial', sans-serif;
    margin: 0;
    padding: 0;
    user-select: none;
}

body {
    font-size: 15px;
}

.w-100 {
    width: 100%;
}

.mt {
    @for $value from 0 through 20 {
      &-#{$value}px {
        margin-top: $value * 2px;
      }
    }
}

.mb {
    @for $value from 0 through 20 {
      &-#{$value}px {
        margin-bottom: $value * 2px;
      }
    }
}

.mr {
    @for $value from 0 through 20 {
      &-#{$value}px {
        margin-right: $value * 2px;
      }
    }
}

.ml {
    @for $value from 0 through 20 {
      &-#{$value}px {
        margin-left: $value * 2px;
      }
    }
}

.text {
    &-primary {
        color: $primary;
    }

    &-dark {
        color: $dark;
    }
}

.tt {
    &-capitalize {
        text-transform: capitalize;
    }

    &-uppercase {
        text-transform: uppercase;
    }
}

.float {
    &-end {
        float: right;
    }
}

.preloader-circle {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    margin-top: 0px;
    width: 100%;
    height: 16px;

    .loader-circle {
        width: 22px;
        height: 22px;
        border-radius: 50%;
        position: absolute;
        animation: rotate 1s linear infinite alternate, loaderClip 2s linear infinite alternate;

        &::before {
            content: "";
            box-sizing: border-box;
            position: absolute;
            inset: 0px;
            border-radius: 50%;
            border: 5px solid white;
            animation: loaderClip 2s linear infinite alternate;
        }
    }
}

.form-input {
    display: flex;
    align-items: center;
    height: 100%;
    width: 100%;
    background: $input; 
    border-radius: 10px;
    padding: 0px 14px 0px 14px;
    box-sizing: border-box;

    svg {
        color: $grey; 
        font-size: 1em;
    }

    input {
        width: 100%;
        font-size: 1em;
        padding: 1em 0 1em 1em;
        background: transparent;
        border: none;
        border-radius: 10px;

        &:focus {
            outline: none;
        }

        &[type='password']{
            font-family: 'Roboto', 'Arial', sans-serif;
        }
    }
}

.btn {
    padding: 0.7em 1em 0.7em 1em;
    background: white;
    border: none;
    border-radius: 8px;
    font-size: 0.9em;
    font-weight: bold;
    cursor: pointer;
    //box-shadow: 0 0 6px rgba($dark, 0.3);
    box-sizing: border-box;
    min-width: 100px;

    &.btn-sm {
        font-size: 0.8em;
    }

    &.btn-pagination {
        min-width: 10px;
    }

    &:hover {
        &.bg-primary {
            background: $primary-hover;
        }
    }
    
    &:disabled {
        cursor: default;
    }
}

.row {
    display: flex;
    box-sizing: border-box;

}

.row-wrap {
    display: flex;
    flex-wrap: wrap;
    box-sizing: border-box;
}

.d-flex {
    display: flex;
}

.fd-column {
    flex-direction: column;
}

.col {
    &-4 {
        width: calc(100% / 3);
    }

    &-12 {
        width: 100%;
    }
}

.g {
    @for $value from 0 through 20 {
        $count: $value * 2px;
        
        &-#{$count} {
            gap: $count;

            .col{
                &-4 {
                    width: calc((100% - ($count * 2)) / 3);
                }
            }
        }
    }
}

.badge {
    padding: 2px 12px 2px 12px;
    border-radius: 6px;
    font-weight: bold;
    font-size: 0.9em;
    box-sizing: border-box;
}

.bg {
    &-primary {
        color: white;
        background: $primary;

        &:disabled {
            background: $primary-disabled;

            &:hover {
                background: $primary-disabled;
            }
        }
    }

    &-danger {
        color: white;
        background: $danger;
        
    }

    &-primary-hover {
        color: white;
        background: $primary-hover;
    }

    &-primary-disabled {
        color: white;
        background: $primary-disabled;
    }

    &-t-primary {
        color: $primary;
        background: rgba($primary, 0.2);
    }
}

.alert {
    padding: 1.5em 1.3em 1.5em 1.3em;
    border-radius: 10px;
    margin-bottom: 16px;
    box-sizing: border-box;
    opacity: 0;
    transition: opacity 500ms ease;

    &.show {
        opacity: 1;
    }

    &.hide {
        opacity: 0;
        pointer-events: none;
    }

    &.danger {
        background-color: $danger;
        color: white;
    } 
    
    &.primary {
        background-color: $primary;
        color: white;
    } 

    .title {
        display: flex;
        align-items: center;
        gap: 16px;
        font-size: 1.1em;
        
        div {
            text-align: justify;
            width: 100%;
            
            span{
                font-weight: bold;
            }
        }

        .btn-close {
            float: right;
            cursor: pointer;
            color: #ffffff;

            &:hover {
                transform: scale(1.2);
            }
        }
    }

    .body {
        font-size: 1em;
    }
}

.panel-count {
    display: flex;
    align-items: center;
    gap: 20px;
    width: 100%;
    padding: 1.3em;
    background: white;
    border-radius: 8px;
    box-shadow: 0 0 6px rgba($dark, 0.2);
    box-sizing: border-box;

    .icon {
        display: flex;
        justify-content: center;
        align-items: center;
        padding: 1em;
        border-radius: 50%;
    }
}

.panel {
    width: 100%;
    padding: 1.3em;
    background: white;
    border-radius: 8px;
    box-shadow: 0 0 6px rgba($dark, 0.2);
    box-sizing: border-box;

    .head {
        display: flex;
        align-items: center;
        justify-content: space-between;
        margin-bottom: 20px;

        .title {
            color: $primary;
        }
    }
}

.container {
    height: 100vh;
    width: 100vw;
}

.modal {
    display: flex;
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: rgba($dark, 0.3);
    justify-content: center;
    align-items: center;
    z-index: 3;
    padding: 10px;
    box-sizing: border-box;
    
    &.modal-show {
        display: flex;
    }

    &.modal-hide {
        display: none;
    }

    .modal-content {
        background: #fff;
        border-radius: 8px;
        box-shadow: 0 0 8px rgba($dark, 0.4);
        max-width: 600px;
        width: 100%;
        box-sizing: border-box;

        .modal-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 15px 20px 15px 20px;
            border-top-left-radius: 8px;
            border-top-right-radius: 8px;
            color: white;
            background: $primary;
            
            &:active {
                cursor: move;
            }

            .modal-close {
                cursor: pointer;

                &:hover {
                    transform: scale(1.2);
                }
            }
        }

        .modal-body{
            padding: 15px 20px 15px 20px;
        }
    }    
}


@keyframes loaderClip {
    0% {
      clip-path: polygon(50% 50%, 0 0, 0 0, 0 0, 0 0, 0 0);
    }
  
    25% {
      clip-path: polygon(50% 50%, 0 0, 100% 0, 100% 0, 100% 0, 100% 0);
    }
  
    50% {
      clip-path: polygon(50% 50%, 0 0, 100% 0, 100% 100%, 100% 100%, 100% 100%);
    }
  
    75% {
      clip-path: polygon(50% 50%, 0 0, 100% 0, 100% 100%, 0 100%, 0 100%);
    }
  
    100% {
      clip-path: polygon(50% 50%, 0 0, 100% 0, 100% 100%, 0 100%, 0 0);
    }
}

@keyframes rotate {
    0% {
      transform: rotate(0deg);
    }

    100% {
      transform: rotate(360deg);
    }
}

@media (max-width: 1070px) {
    .g {
        @for $value from 0 through 20 {
            $count: $value * 2px;
            
            &-#{$count} {
                gap: $count;
    
                .col{
                    &-4 {
                        width: calc((100% - ($count * 1)) / 2);
                    }
                }
            }
        }
    }
}


@media (max-width: 800px) {
    .g {
        @for $value from 0 through 20 {
            $count: $value * 2px;
            
            &-#{$count} {
                gap: $count;
    
                .col{
                    &-4 {
                        width: 100%;
                    }
                }
            }
        }
    }
}